{
  "name": "Email_activity",
  "json_schema": {
    "type": "object",
    "title": "Email Activity",
    "description": "A list of member's subscriber activity in a specific campaign.",
    "properties": {
      "emails": {
        "type": "object",
        "title": "List members",
        "description": "An array of members that were sent the campaign.",
        "properties": {
          "campaign_id": {
            "type": "string",
            "title": "The unique id for the campaign.",
            "description": "The unique id for the campaign."
          },
          "list_id": {
            "type": "string",
            "title": "The unique id for the list.",
            "description": "The unique id for the list."
          },
          "list_is_active": {
            "type": "boolean",
            "title": "The status of the list used.",
            "description": "The status of the list used, namely if it's deleted or disabled."
          },
          "email_id": {
            "type": "string",
            "title": "email MD5 hash.",
            "description": "The MD5 hash of the lowercase version of the list member's email address."
          },
          "email_address": {
            "type": "string",
            "title": "Email address for a subscriber.",
            "description": "Email address for a subscriber."
          },
          "action": {
            "type": "string",
            "title": "action",
            "enum": ["open", "click", "bounce"],
            "description": "One of the following actions: 'open', 'click', or 'bounce'"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "enum": ["hard", "soft"],
            "description": "If the action is a 'bounce', the type of bounce received: 'hard', 'soft'."
          },
          "timestamp": {
            "type": "string",
            "title": "Action date and time",
            "description": "The date and time recorded for the action in ISO 8601 format.",
            "format": "date-time"
          },
          "url": {
            "type": "string",
            "title": "The IP address.",
            "description": "The IP address recorded for the action."
          },
          "ip": {
            "type": "string",
            "title": "Action ip address",
            "description": "The IP address recorded for the action."
          },
          "_links": {
            "type": "array",
            "title": "link types",
            "description": "A list of link types and descriptions for the API schema documents.",
            "items": {
              "type": "object",
              "properties": {
                "rel": {
                  "type": "string",
                  "title": "Type of link",
                  "description": "As with an HTML 'rel' attribute, this describes the type of link."
                },
                "href": {
                  "type": "string",
                  "title": "Fully-qualified URL",
                  "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action."
                },
                "method": {
                  "type": "string",
                  "title": "HTTP method",
                  "description": "The HTTP method that should be used when accessing the URL defined in 'href'. Possible values: 'GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', or 'HEAD'."
                },
                "targetSchema": {
                  "type": "string",
                  "title": "URL representing the schema for GET",
                  "description": "For GETs, this is a URL representing the schema that the response should conform to."
                },
                "schema": {
                  "type": "string",
                  "title": "URL representing the schema for POST and PUT",
                  "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to."
                }
              }
            }
          }
        }
      },
      "campaign_id": {
        "type": "string",
        "title": "Campaign ID",
        "description": "The unique id for the sent campaign."
      },
      "total_items": {
        "type": "integer",
        "title": "Total amount of items",
        "description": "The total number of items matching the query regardless of pagination."
      },
      "_links": {
        "type": "array",
        "title": "link types",
        "description": "A list of link types and descriptions for the API schema documents.",
        "items": {
          "type": "object",
          "properties": {
            "rel": {
              "type": "string",
              "title": "Type of link",
              "description": "As with an HTML 'rel' attribute, this describes the type of link."
            },
            "href": {
              "type": "string",
              "title": "Fully-qualified URL",
              "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action."
            },
            "method": {
              "type": "string",
              "title": "HTTP method",
              "description": "The HTTP method that should be used when accessing the URL defined in 'href'. Possible values: 'GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', or 'HEAD'."
            },
            "targetSchema": {
              "type": "string",
              "title": "URL representing the schema for GET",
              "description": "For GETs, this is a URL representing the schema that the response should conform to."
            },
            "schema": {
              "type": "string",
              "title": "URL representing the schema for POST and PUT",
              "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to."
            }
          }
        }
      }
    }
  },
  "supported_sync_modes": ["incremental", "full_refresh"],
  "source_defined_cursor": true,
  "default_cursor_field": ["timestamp"]
}
